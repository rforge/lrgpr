AC_INIT([RcppGSLExample], 0.1.0)

## Use gsl-config to find arguments for compiler and linker flags
##
## Check for non-standard programs: gsl-config(1)
AC_PATH_PROG([GSL_CONFIG], [gsl-config])
## If gsl-config was found, let's use it
if test "${GSL_CONFIG}" != ""; then
    # Use gsl-config for header and linker arguments (without BLAS which we get from R)
    GSL_CFLAGS=`${GSL_CONFIG} --cflags`
    GSL_LIBS=`${GSL_CONFIG} --libs`
else
    AC_MSG_ERROR([gsl-config not found, is GSL installed?])
fi

## Use Rscript to query Rcpp for compiler and linker flags
## link flag providing libary as well as path to library, and optionally rpath
RCPP_LDFLAGS=`${R_HOME}/bin/Rscript -e 'Rcpp:::LdFlags()'`

# Get INCLUDE path for bigmemory package
BIGMEMORY_IFLAGS=`${R_HOME}/bin/Rscript -e "cat('-I', tools::file_path_as_absolute(base::system.file( package = 'bigmemory')), sep='' )"`

# Get INCLUDE path for BH package
BH_IFLAGS=`${R_HOME}/bin/Rscript -e "cat('-I', tools::file_path_as_absolute(base::system.file( package = 'BH')), sep='' )"`

# Get INCLUDE path for RcppProgress package
BH_IFLAGS=`${R_HOME}/bin/Rscript -e "cat('-I', tools::file_path_as_absolute(base::system.file( package = 'RcppProgress')), sep='' )"`


# Now substitute these variables in src/Makevars.in to create src/Makevars
AC_SUBST(GSL_CFLAGS)
AC_SUBST(GSL_LIBS)
AC_SUBST(RCPP_LDFLAGS)
AC_SUBST(BIGMEMORY_IFLAGS)
AC_SUBST(BH_IFLAGS)
AC_SUBST(RCPPPROGRESS_IFLAGS)

AC_OUTPUT(src/Makevars)